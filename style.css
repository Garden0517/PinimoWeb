* {
    box-sizing: border-box; /* 패딩/보더가 너비/높이에 포함되도록 설정 (레이아웃 계산 용이) */
    margin: 0;
    padding: 0;
}

html {
    font-size: 62.5%; /* 16px * 0.625 = 10px */
}

/* body는 기본 환경 설정 */
body {
    font-family: Pretendard;
    background-color: #191919;
    color: #fff;
    margin: 0; 
}

/* 스크롤 영역을 확보하기 위해 섹션 높이를 지정 */
section {
    /* height: 100vh; 제거됨 - 내용물에 따라 높이 자동 조절 */
    width: 100%;
    padding-top: 100px; /* 섹션 간의 충분한 상단 간격 확보 */
    box-sizing: border-box;
}

/* 모든 내용을 감싸는 컨테이너에 레이아웃 설정 */
.container {
    display: flex;
    flex-direction: column; /* 기본적으로 요소들을 세로로 쌓습니다. */
    max-width: 1440px; /* 최대 너비 설정 */
    width: 90%;
    height: auto;
    margin: 0 auto;    /* 가운데 정렬 */
    position: relative;
    
    /* background-color: yellow; <- 디버깅을 위해 잠시 남겨두었습니다. 실제 사용 시 제거하세요. */
}

img, video {
    max-width: 100%; /* 이미지가 컨테이너 너비를 넘지 않도록 설정 */
    height: auto;    /* 이미지 비율을 유지 */
    display: block;  /* 레이아웃 정렬을 쉽게 하기 위해 블록 요소로 변경 */
}

p{
    font-size: 2rem; /* 20px */
    line-height: 1.5;
    font-weight: 300;
}

h1{
    font-size: 5rem; /* 50px */
    margin-bottom: 40px;
    font-weight: 700;
}

h2{
    font-size: 2rem; /* 20px */
    margin-bottom: 20px;
    font-weight: 500;    
}

/* 768px 이상 화면일 때 적용될 스타일 (데스크탑/태블릿 레이아웃) */
@media screen and (min-width: 768px) {
    /* 예시: 폰트 크기 조정 */
    body {
        font-size: 112.5%; /* 18px */
    }
    
    /* 예시: Flexbox나 Grid를 사용해 다단 레이아웃을 만듭니다 */
    .content-area {
        display: flex;
        gap: 20px;
    }
}

/* 1. 애니메이션 시작 상태 (화면에서 숨겨진 상태) */
.animate-item {
    /* 초기 투명도: 0 (숨김) */
    opacity: 0; 
    
    /* 초기 위치: Y축으로 50px 아래에 위치 */
    transform: translateY(50px); 
    
    /* 애니메이션 전환 효과 정의: 0.8초 동안 부드럽게 움직이도록 설정 */
    transition: opacity 0.8s ease-out, transform 0.8s ease-out; 
}

/* 2. 애니메이션 완료 상태 (JS가 클래스를 추가하면 적용됨) */
.animate-item.is-visible {
    /* 최종 투명도: 1 (보이게) */
    opacity: 1; 
    
    /* 최종 위치: 원래 위치 (위로 50px 올라오는 효과) */
    transform: translateY(0); 
}

/*첫 화면*/
.mainimg{
    display: flex;
    flex-direction: column; /* 기본적으로 요소들을 세로로 쌓습니다. */
    max-width: 1920px; /* 최대 너비 설정 */
    width: 100%;
    height: auto;
    margin: 0 auto;    /* 가운데 정렬 */
    position: relative;  
}

/* 첫번째 섹션 */
section:nth-child(1) .container {
    flex-direction: row; /* 내용을 가로로 배치 */
    flex-wrap: wrap; /* 반응형을 위해 줄바꿈 허용 */
    justify-content: space-between; /* 요소들을 양 끝으로 분산 */
    align-items: flex-start; /* 상단 정렬 */
}

.Box1{
    display: flex;
    background-image: url('img/Box1.png');
    background-repeat: no-repeat;
    width: 100%;
    height: auto;
    margin-top: 495px;
}

.Logo1{
    z-index: 1000;
    position: absolute;
    display: flex;
    margin-top: 268px;
}

.Text1{
    display: flex;
    flex-direction: column;
    padding-left: 738px;
    padding-top: 80px;
    padding-bottom: 75px;
}


.glass1{
    display: flex;
    position: absolute;

    padding-top: 385px;
}

.animate-item.delay-1.is-visible {
    transition-delay: 0.2s;
}

.animate-item.delay-2.is-visible {
    transition-delay: 0.5s;
}

.animate-item.delay-3.is-visible {
    transition-delay: 0.8s;
}

.animate-item.delay-4.is-visible {
    transition-delay: 1.2s;
}

/* 두번째 섹션 */
.Text2{
    display: flex;
    position: static;
    flex-direction: column;

    padding-top: 200px;
}

.Box2{
    display: flex;
    width: 100%;
    height: auto;
    margin-top: 80px;
    align-items: flex-end;
}

.Box2 .index{
    display: flex;
    flex-direction: column;
    max-width: 104px;
    margin-right: 119px;

}

.Box2 .index .text{
    display: flex;
    flex-direction: column;
    height: auto;
    margin-bottom: 24px;
}

.Box2 .index .text h1{
    font-size: 3rem;
    margin-bottom: 0px;
    font-weight: 500;
}

.Box2 .index .text h2{
    font-size: 2rem;
    margin-bottom: 0px;
    font-weight: 300;    
}

.Box2 .table{
    display: flex;
    position: relative;
    flex-direction: column;
    padding-left: 20px;
    height: 510px;
}

.Box2 .table p {
    font-size: 2.4rem;
    margin-bottom: 14px;
    font-weight: 300; 
}

.Box2 .table img {
    display: flex;
    padding-bottom: 34px;
}

.Box2 .table .box1{
    display: flex;
    flex-direction: column;
    align-items: flex-end;
}

.Box2 .table .box2{
    display: flex;
    flex-direction: column;
    align-items: flex-start;
}

.Box2 .table .box3{
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    height: 92px;
    width: 0;
    opacity: 0;
    overflow: hidden;
}

.Box2 .table .box3 img {
    /* 이미지가 부모(.box3)의 너비를 100% 채우도록 고정 */
    width: 100%; 
    height: 100%;
    object-fit: contain;
    display: block;
}


@keyframes chart-reveal {
    0% {
        width: 0;
        opacity: 0; 
    }
    1% {
        width: 0;
        opacity: 1; 
    }
    100% {
        width: 100%;
        opacity: 1;
    }
}

.Box2 .table .box2.animate-item.is-visible .box3 {
    animation-delay: 550s; 
    
    /* chart-reveal 애니메이션을 실행합니다. */
    animation: chart-reveal 0.8s ease-out forwards;
    opacity: 1;
    /* 애니메이션 실행 시 너비를 100%로 설정 */
    width: 100%;
}

.Box2 .table .box2.animate-item.is-visible .box3 {
    animation-delay: 550s; 
    
    /* chart-reveal 애니메이션을 실행합니다. */
    animation: chart-reveal 0.8s ease-out forwards;
    opacity: 1;
    /* 애니메이션 실행 시 너비를 100%로 설정 */
    width: 100%;
}

.Box2 .etc{
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    padding-bottom: 56px;
    padding-left: 20px;
}

.Box2 .etc p{
    position: absolute;
    z-index: 500;
    font-size: 1.8rem;
    margin-bottom: 0;
    font-weight: 500;
    color: black;
    padding-left: 12px;
}

/* 세번째 섹션 */
.Text3{
    display: flex;
    position: static;
    flex-direction: column;
    align-items: center;
    padding-top: 200px;
}

.Box3{
    display: flex;
    position: static;
    width: 100%;
    flex-direction: column;
    padding-top:120px;
}

.Box3 .first{
    display: flex;
    flex-direction: row;
    margin-bottom: 30px;
}

.Box3 .second{
    display: flex;
    flex-direction: row;
}

/* 네번쨰 섹션 */
.Img4{
    display: flex;
    flex-direction: column; /* 기본적으로 요소들을 세로로 쌓습니다. */
    max-width: 1920px; /* 최대 너비 설정 */
    width: 100%;
    height: auto;
    margin: 0 auto;
    position: absolute;  
    padding-top: 200px;
}

.problems1{
    display: flex;
    position: absolute;
    margin-left: 960px;
    margin-top: 0;
    z-index: 100;
}
.problems2{
    display: flex;
    position: absolute;
    margin-left: 0;
    margin-top: 514px;
    z-index: 200;
}

.problems3{
    display: flex;
    position: absolute;
    margin-left: 960px;
    margin-top: 794px;
    z-index: 300;
}
.problems4{
    display: flex;
    position: absolute;
    margin-left: 0;
    margin-top: 1091px;
    z-index: 400;
}

.problems5{
    display: flex;
    position: absolute;
    margin-left: 960px;
    margin-top: 1440px;
    z-index: 500;
}
.problems6{
    display: flex;
    position: absolute;
    margin-left: 0;
    margin-top: 1500px;
    z-index: 600;
}

.Text4{
    display: flex;
    position: relative;
    flex-direction: column;
    z-index: 500;
    padding-top: 200px;
}

.Box4{
    display: flex;
    position: relative;
    z-index: 900;
    flex-direction: row;
    width: 100%;
    justify-content: center;
    margin-top: 1757px;
}

.Box4 h1{
    font-size: 2rem; /* 20px */
    font-weight: 400;
}

.Box4 p{
    display: flex;
    margin-left: 20px;
    font-size: 2rem; /* 20px */
    line-height: 1.5;
    font-weight: 300;
}

.word4{
    display: flex;
    flex-direction: column;
    align-items: center;

}


/* 다섯번쨰 섹션 */
.Text5{
    display: flex;
    flex-direction: column;
    padding-top: 200px;
}

.Text5 .textbox {
     display: flex;
     flex-direction: column;   
     width: 100%;
}

.word5{
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-top: 185px;
    padding-bottom: 200px;
}

/* 여섯번쨰 섹션 */
.Text6{
    display: flex;
    flex-direction: column;
    padding-bottom: 200px;
}

.word6 {
    display: flex;
    flex-direction: column;
}
.word6_1, .word6_2, .word6_3 {
    display: flex;
    transition: margin-bottom 0.4s ease-in-out;
}

.margin-group-1 {
    margin-bottom: 20px; /* .word6_1의 기본 margin-bottom */
}

#section-solution {
    /* 기존 padding-top 값 유지 */
    padding-top: 100px;
}

#solution-sticky-wrapper {
    /* 스크롤 가능한 공간을 충분히 확보 (예: 400vh) */
    /* 이 값이 인터랙션이 지속될 스크롤 길이입니다. 이미지 그룹 수(3개) * 화면 높이(100vh)를 고려하여 설정합니다. */
    min-height: 350vh; 
    position: relative;
    /* max-width, width, margin: 0 auto 등 기존 .container 스타일은 이미 적용되어 있습니다. */
}

.solution-content-wrapper {
    /* 고정할 내용을 화면 상단에 고정합니다. */
    position: sticky;
    top: 0; 
    
    /* 뷰포트 높이만큼만 보이도록 합니다. */
    height: 100vh;
    width: 100%;
    
    /* 내용을 수직 정렬하고 가운데 배치할 수 있도록 flex 사용 (필요에 따라 조정) */
    display: flex;
    flex-direction: column;
    /* justify-content: center; */ 
    
    /* 컨테이너의 원래 padding-top을 유지 (Text6이 너무 위에 붙지 않도록) */
    padding-top: 100px; 
}

/* word6 위치 조정 */
#word6-images {
    /* 필요에 따라 sticky wrapper 내에서 word6의 위치를 조정합니다. */
    margin-top: 50px; /* Text6 아래로 조금 내립니다. */
}

/* 두 번째 그룹 마진 */
.margin-group-2 {
    margin-bottom: 20px; /* 예시 마진값 */
}

/* 세 번째 그룹 마진 */
.margin-group-3 {
    margin-bottom: 0px; /* 예시 마진값 */
}

/* 일곱번째 섹션*/
.Text7{
    display: flex;
    flex-direction: column;
    padding-top: 100px;
}

.imgbox7{
    background-image: url("img/service/img.png");
    background-repeat: no-repeat;
    margin-top: 164px;
    margin-left: 240px;
}

/* 여덟번째 섹션*/
.Box8 {
    display: flex;
    justify-content: center;
    width: 100%;
    margin-top: 200px;
}

video {
    pointer-events: none;
}

/* 아홉번째 섹션*/
.Text9{
    display: flex;
    flex-direction: column;
    padding-top: 200px;
}

.Text9 .textbox {
     display: flex;
     flex-direction: column;   
     width: 100%;
}

.Img9{
    padding-top: 188px;
    display: flex;
    flex-direction: column; /* 기본적으로 요소들을 세로로 쌓습니다. */
    max-width: 1920px; /* 최대 너비 설정 */
    width: 100%;
    height: auto;
    margin: 0 auto;    /* 가운데 정렬 */
    position: relative;  
}

/* 1. 이미지 스택 컨테이너 설정 */
#logo-image-stack {
    /* 겹치는 요소의 absolute 기준점 */
    position: relative; 
    
    /* 너비는 부모 요소(.Img9)를 따르고 높이는 내부 콘텐츠(logo-image)에 맞춰집니다. */
    width: 100%;
    height: auto; 
}

/* 2. 기존 이미지 (#logo-image)를 기준으로 삼습니다. */
#logo-image-stack img {
    /* 이미지가 한 줄에 하나씩 배치되도록 설정 */
    display: block; 
    
    /* 너비를 100%로 설정하여 부모(#logo-image-stack) 너비를 따르게 함 */
    width: 100%;
    height: auto; 
}

/* 기존 이미지 (#logo-image)만 relative로 설정하여 컨테이너 높이를 유지 */
#logo-image-stack #logo-image {
    position: relative;
}

.fade-in-item {
    /* 배치: 부모(#logo-image-stack)의 top/left를 기준으로 겹치게 설정 */
    position: absolute;
    top: 0;
    left: 0;
    
    /* 크기: 기존 이미지와 동일한 크기로 완벽하게 겹치도록 설정 */
    width: 100%; 
    height: 100%; 
    
    /* 초기 상태: 투명하게 숨김 */
    opacity: 0; 
    
    /* 애니메이션 설정: 1.5초 동안 투명도 변화를 부드럽게 전환 */
    transition: opacity 1.5s ease-out; 
    
    /* z-index: 기존 이미지 위에 확실히 보이도록 설정 */
    z-index: 10; 
}

/* 애니메이션 완료 상태 (JavaScript가 .is-faded-in 클래스를 추가하면 적용됨) */
.fade-in-item.is-faded-in {
    /* 최종 상태: 보이게 설정 */
    opacity: 1; 
}

/* 열번째 섹션*/
.Text10{
    display: flex;
    position: relative;
    flex-direction: column;
}

.Box10{
    display: flex;
    flex-direction: row;
    width: 100%;
    align-items: center;
    margin-top: 200px;
    margin-bottom: 300px;
}

/* 열한번째 섹션*/
.Bg11{
    background-image: url("img/mapbases/map11.png");
    background-repeat: no-repeat;
    width: 100%;
    height: auto;
}

.Box11_1{
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    margin-top: 53px;
    padding-bottom: 379px;

}

.Text11{
    display: flex;
    position: relative;
    flex-direction: column;
    width: 50%;
    margin-top: 50px;

}

.Key11{
    display: flex;
    margin-top: 167px;
    width: 100%;
    height: auto;
    padding-left: 122px;
}

.Box11_2{
    display: flex;
    flex-direction: row-reverse;
    padding-bottom: 171px;
}

.Box11_3{
    display: flex;
    flex-direction: column;
}

.mapkey{
    position: relative;
    z-index: 500;
}

.maprute{
    background-image: url("img/mapbases/rute.png");
    background-repeat: no-repeat;

    /* 초기 상태: 투명하게 숨김 */
    opacity: 0;
    
    /* 전환 효과: 0.5초 동안 부드럽게 투명도를 변경 */
    transition: opacity 0.5s ease-in-out;
}

.maprute.is-rute-visible {
    opacity: 1; /* 보이게 설정 */
}

.Box11_4{
    display: flex;
    flex-direction: column;
    align-items: center;
    position: absolute;
    z-index: 1000;
    margin: 0 auto;
    width: 100%;
    padding-top: 607px;
}

.button11{
    background-image: url("img/mapbases/button11.png");
    background-repeat: no-repeat;
    display: flex;
    width: 172px;
    height: 172px;
    justify-content: space-around;
    align-items: center;
    margin-bottom: 24px;
    box-sizing: border-box;
}

.button11 p{
    font-size: 4rem;
    line-height: 1.5;
    font-weight: 700;
}

@keyframes pulse-border {
    0% {
        box-shadow: 0 0 0 0 rgba(255, 255, 255, 0.4); /* 초기 (테두리 없음) */
        border: 1px solid rgba(255, 255, 255, 0.4);
    }
    50% {
        box-shadow: 0 0 0 4px rgba(127, 255, 127, 1); /* 확장 및 투명도 0 */
        border: 1px solid rgba(127, 255, 127, 1); /* 테두리가 진해짐 */
    }
    100% {
        box-shadow: 0 0 0 0 rgba(255, 255, 255, 0.4); /* 종료 (다시 축소) */
        border: 1px solid rgba(255, 255, 255, 0.4);
    }
}

/* 2. OFF 상태일 때 적용될 클래스 */
.button11.is-pulsing {
    /* border 자체는 animation 내에서 제어 */
    /* 애니메이션 적용: pulse-border를 1.5초 간격으로 무한 반복 */
    animation: pulse-border 1.5s infinite;
    border-radius: 50%; /* 버튼이 원형이라고 가정하고 테두리도 원형으로 */
}

.box11{
    background-image: url("img/mapbases/box11.png");
    background-repeat: no-repeat;
    display: flex;
    flex-direction: column;
    width: 800px;
    height: 270px;
    justify-content: center;
    align-items: center;
}

.h11{
    display: flex;
    flex-direction: row;
}

.h11 h1{
    font-size: 7rem;
    line-height: 1.5;
    font-weight: 700;
    margin-bottom: 0;
}

.text-active-color {
    color: #7FFF6C !important; /* 중요한 색상이므로 !important를 사용하거나, 더 높은 선택자 사용 */
}

/* 2. Box11 내부 h1 기본 색상 설정 (흰색이 기본이지만 명시적으로 설정) */
.box11 h1 {
    color: #fff; /* 기본 텍스트 색상 */
    transition: color 0.3s ease; /* 색상 변경 시 부드러운 전환 효과 추가 */
}

.box11 h2{
    font-size: 2rem;
    line-height: 1.5;
    font-weight: 300;
    text-align: center;
    margin-bottom: 0;
}


/* 열두번째 섹션*/
.rock12{
    padding-top: 200px;
    margin: 0 auto;
    display: flex;
    align-items: center;
    flex-direction: column;
}

.rockImg12{
    display: flex;
}

.rock12 h1{
    font-size: 5rem;
    line-height: 1.3;
    font-weight: 600;
    margin-bottom: 0;
    text-align: center;
    margin-top: 28px;
}

.rock12 p{
    font-size: 2rem;
    line-height: 1.5;
    font-weight: 300;
    margin-bottom: 310px;
    text-align: center;
    margin-top: 36px;
}

.Box12{
    display: flex;
    width: 100%;
    flex-direction: row;
    justify-content: space-between;
}

.textbox12 h1{
    display: flex;
    font-size: 5rem;
    line-height: 1.3;
    font-weight: 600;
    margin-top: 430px;
}

.textbox12 p{
    font-size: 2rem;
    line-height: 1.4;
    font-weight: 300;
    margin-top: 36px;
}

#aimasking-textbox {
    position: relative; 
    transform: translateY(50px); 
    transition: transform 0.5s ease-out, opacity 0.5s ease-out; 
    opacity: 1;
}

.is-textbox-moved {
    transform: translateY(0); /* 원래 위치로 이동 (슬라이드 업) */
    opacity: 1; /* 보이게 함 */
}

.Img12{
    display: flex;
    opacity: 0;
    transition: opacity 0.5s ease-in-out;
}

.Img12.is-active {
    opacity: 1;
}

/* 1. 스크롤 공간 확보 */
#aimasking-sticky-wrapper {
    min-height: 500vh; /* 4단계 인터랙션을 위한 충분한 높이 확보 */
}

/* 2. 고정될 콘텐츠 */
.aimasking-content-wrapper {
    position: sticky; /* 필수: 뷰포트 상단에 고정 */
    top: 0; 
    height: 100vh; /* 뷰포트 높이에 고정 */
    width: 100%;
    display: flex;
    align-items: center; 
    justify-content: space-between;
}

/* 열세번째 섹션*/
.Text13{
    display: flex;
    position: relative;
    flex-direction: column;
    width: 50%;
    margin-top: 58px;   
}

.Box13{
    display: flex;
    flex-direction: row;
    padding-bottom: 150px;
    padding-top: 200px;
}

/* 열네번째 섹션 */
.Text14{
    display: flex;
    position: relative;
    flex-direction: column;
    width: 50%;
    margin-top: 58px;
    align-items: flex-end;   
}

.Box14{
    display: flex;
    flex-direction: row;
    align-items: center;
    padding-top: 41px;
    padding-bottom: 159px;
}

.Img14{
    display: flex;
    width: 832px;
}

/* 1. 스크롤 공간 확보 */
#connection-sticky-wrapper {
    /* 3단계 인터랙션이 진행될 충분한 스크롤 공간 확보 (3단계 * 100vh = 300vh) */
    min-height: 300vh; 
    position: relative;
    /* 기존 .container 스타일 유지 */
}

/* 2. 고정될 콘텐츠 (이미지와 텍스트) */
.connection-content-wrapper {
    position: sticky;
    top: 0; 
    height: 100vh; /* 뷰포트 높이에 고정 */
    width: 100%;
    /* 내부 콘텐츠 정렬을 위해 flex 속성 추가 (필요 시) */
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center; 
}

/* 3. Box14 내부의 기존 레이아웃을 sticky wrapper에 맞게 조정 */
.connection-content-wrapper .Box14 {
    /* Box14는 기존의 가로 정렬 레이아웃을 유지 */
    width: 100%; 
    display: flex;
    flex-direction: row; 
    align-items: center;
    justify-content: space-between;
}

/* 열다섯번째 섹션 */
.Box15{
    display: flex;
    flex-direction: row;
    margin-top: 41px;
    padding-bottom: 126px;
    justify-content: space-between;
}

.Text15{
    display: flex;
    position: relative;
    flex-direction: column;
    width: 50%;
    margin-top: 322px;
}

/* 열여섯번째 섹션 */
.Box16{
    background-image: url("img/authenticity.png");
    background-repeat: no-repeat;
    display: flex;
}

.Text16{
    display: flex;
    position: relative;
    flex-direction: column;
    width: 50%;
    margin-top: 450px;
    margin-left: 852px;
    padding-bottom: 948px;
}

/*열일곱번째*/
.Box17{
    background-image: url("img/authenticity2.png");
    background-repeat: no-repeat;
    margin-top: 164px;
}

.Text17{
    display: flex;
    position: relative;
    flex-direction: column;
    width: 50%;
    margin-top: 17px;
    padding-bottom: 720px;
}

/* 열여덟번째 섹션 */
.Box18{
    display: flex;
    flex-direction: row;
    margin-top: 200px;
    padding-bottom: 135px;
    justify-content: space-between;
}

.Text18{
    display: flex;
    position: relative;
    flex-direction: column;
    width: 50%;
}


/* 열아홉번째 섹션 */
.Img19{
    display: flex;
    position: relative;
    margin: 0 auto;
    width: 100%;
}
.Text19{
    display: flex;
    position: absolute;
    flex-direction: column;
    text-align: center;
    z-index: 500;
    margin: 0 auto;
    width: 100%;
    padding-top: 431px;
}

/* 스물번째 섹션 */
.Box20{
    padding-bottom: 27px;
}

/* 스물한번째 섹션 */
.Box21{
    display: flex;
    flex-direction: row;
    padding-top: 287px;
}

.Text21{
    display: flex;
    position: relative;
    flex-direction: column;
    width: 50%;
}
.Text21 h1{
    font-size: 5rem;
    line-height: 1.5;
    font-weight: 400;
    margin-bottom: 184px;
}
.Text21 p{
    font-size: 2.4rem;
    line-height: 1.5;
    font-weight: 200;
    margin-bottom: 10px;
}
.text21{
    display: flex;
    flex-direction: row;
    margin-left: 403px;
}